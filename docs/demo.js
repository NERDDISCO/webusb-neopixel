!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var o in n)("object"==typeof exports?exports:e)[o]=n[o]}}(window,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);class o{static convert(e,t,n){if(void 0==e)return[0,0,0];var o,r,i,s=(1-Math.abs(2*n-1))*t,c=e/60,l=s*(1-Math.abs(c%2-1));switch(c=Math.floor(c)){case 0:o=s,r=l,i=0;break;case 1:o=l,r=s,i=0;break;case 2:o=0,r=s,i=l;break;case 3:o=0,r=l,i=s;break;case 4:o=l,r=0,i=s;break;case 5:o=s,r=0,i=l;break;default:throw"Incorrect format for an hsl color."}var a=n-s/2;return o+=a,r+=a,i+=a,[Math.round(255*o),Math.round(255*r),Math.round(255*i)]}}const r=window.controller=new class{constructor(e={}){this.device=e.device||void 0,this.filters=e.filters||[{vendorId:9025,productId:32822},{vendorId:9025,productId:54},{vendorId:10755,productId:32822},{vendorId:10755,productId:54},{vendorId:10755,productId:64},{vendorId:10755,productId:32832},{vendorId:10374,productId:32770}],this.leds=new Array(3*e.leds).fill(0)}enable(){return navigator.usb.requestDevice({filters:this.filters}).then(e=>{this.device=e})}getPairedDevice(){return navigator.usb.getDevices().then(e=>e[0])}autoConnect(){return this.getPairedDevice().then(e=>(this.device=e,new Promise((e,t)=>void 0===this.device?t(new Error("Can not find USB device.")):e(this.connect()))))}connect(){return this.device.open().then(()=>{if(null===this.device.configuration)return this.device.selectConfiguration(1)}).then(()=>this.device.claimInterface(2)).then(()=>this.device.controlTransferOut({requestType:"class",recipient:"interface",request:34,value:1,index:2})).then(()=>{this.readLoop()})}readLoop(){this.device.transferIn(5,1).then(e=>{var t=new Uint8Array(e.data.buffer);console.log(`Connected NeoPixels: ${t}`),this.readLoop()},e=>{console.log(e)})}send(e){return new Promise((t,n)=>{if(void 0===this.device)return n(new Error("USB device is not connected to the computer"));{const n=Uint8Array.from(e);return t(this.device.transferOut(4,n))}})}update(e,t){return new Promise((n,o)=>(e=3*(e-1),Array.isArray(t)?(this.leds.splice(e,t.length,...t),n(this.send(this.leds))):o(new Error("Could not update LEDs because the provided value is not of type number[]"))))}disconnect(){return this.device.controlTransferOut({requestType:"class",recipient:"interface",request:34,value:1,index:2}).then(()=>this.device.close())}}({leds:new Array(180).fill(0)}),i=new class{constructor(e={}){this.output=e.output,this.logLedsElement=e.logLedsElement,this.logLedsEnabled=!1,this.logLedsElement.addEventListener("change",e=>{const{target:t}=e;this.logLedsEnabled=t.checked})}log(e,t,n){let o="";switch(n){case"USBDevice":o=`${e}: ${t}`;break;case"array":o=e+JSON.stringify(t);break;case"keyvalue":o=`${e}: ${t}`;break;default:o=e+" "+t}console.log(o),this.output.value+=o+"\n",this.output.scrollTop=this.output.scrollHeight}logUsbDevice(e){this.log("---","","string"),this.log("Selected device",e.productName,"USBDevice"),this.log("---","","string");const{configuration:t,configurations:n,deviceClass:o,deviceProtocol:r,deviceSubclass:i,deviceVersionMajor:s,deviceVersionMinor:c,deviceVersionSubminor:l,manufacturerName:a,opened:d,productId:u,productName:v,serialNumber:h,usbVersionMajor:g,usbVersionMinor:f,usbVersionSubminor:p,vendorId:b}=e,m=b.toString(16),y=u.toString(16);this.log("Opened",d,"keyvalue"),this.log("Vendor ID",`${b} (0x${m})`,"keyvalue"),this.log("Manufacturer Name",a,"keyvalue"),this.log("Product ID",`${u} (0x${y})`,"keyvalue"),this.log("Product Name",v,"keyvalue"),this.log("Serialnumber",h,"keyvalue"),this.log("Device Class",o,"keyvalue"),this.log("Device Protocol",r,"keyvalue"),this.log("Device Subclass",i,"keyvalue"),this.log("Device Version Major",s,"keyvalue"),this.log("Device Version Minor",c,"keyvalue"),this.log("Device Version Subminor",l,"keyvalue"),this.log("USB Version Major",g,"keyvalue"),this.log("USB Version Minor",f,"keyvalue"),this.log("USB Version Subminor",p,"keyvalue")}logLeds(e){this.logLedsEnabled&&this.log("",e,"array")}}({output:document.getElementById("console"),logLedsElement:document.getElementById("logLeds")}),s=document.getElementById("activateWebUsb"),c=document.getElementById("disconnectWebUsb"),l=document.getElementById("updateAnyChannel"),a=document.getElementById("animationBlack"),d=document.getElementById("animationRainbow");let u=!1;s.addEventListener("click",e=>{r.enable().then(()=>{r.connect().then(()=>{i.logUsbDevice(r.device)})}).catch(()=>{i.log("No USB device was selected","","string")})}),c.addEventListener("click",e=>{r.disconnect().then(()=>{i.log("Destroyed connection to USB device, but USB device is still paired with the browser","","string")})}),r.autoConnect().then(()=>{i.log("Found an already paired USB device","","string"),i.logUsbDevice(r.device)}).catch(e=>{i.log("autoConnect:",e,"string")}),l.addEventListener("submit",e=>{e.preventDefault();const t=new FormData(l),n=parseInt(t.get("channel"),10),o=t.get("color").match(/[A-Za-z0-9]{2}/g).map(e=>parseInt(e,16));i.log("---","","string"),i.log(`Set LED ${n} to ${o}`,"","string"),r.update(n,o).then(()=>{i.logLeds(r.leds)}).catch(e=>{i.logLeds(r.leds),i.log(e,"","string")})}),a.addEventListener("click",e=>{r.leds.splice(0,r.leds.length,...new Array(180).fill(0)),i.log("Set all NeoPixel to black","","string"),r.send(r.leds).then(()=>{i.logLeds(r.leds)}).catch(e=>{i.logLeds(r.leds),i.log(e,"","string")})}),d.addEventListener("click",e=>{u=!u,d.innerHTML="Play"===d.innerHTML?"Pause":"Play",u?(i.log("Started Rainbow animation","","string"),h()):i.log("Stopped Rainbow animation","","string")});let v=0;const h=()=>{if(u){for(let e=0;e<60;e++){let t=o.convert((v+1*e)%360,1,.4);r.leds.splice(3*e,t.length,...t)}v=++v>360?0:v,r.send(r.leds).then(()=>{}).catch(e=>{i.logLeds(r.leds),i.log(e,"","string")}),window.requestAnimationFrame(h)}}}])});
//# sourceMappingURL=demo.js.map